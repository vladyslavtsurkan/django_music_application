# Generated by Django 4.1.7 on 2023-02-28 21:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Album name')),
                ('spotify_id', models.CharField(db_index=True, max_length=22, unique=True, validators=[django.core.validators.MaxLengthValidator(22), django.core.validators.MinLengthValidator(22)], verbose_name='Spotify ID')),
                ('spotify_uri', models.CharField(max_length=50, unique=True, verbose_name='Spotify URI')),
                ('release_date', models.DateField(verbose_name='Release date')),
            ],
        ),
        migrations.CreateModel(
            name='AlbumType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Album type name')),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Group name')),
                ('spotify_id', models.CharField(db_index=True, max_length=22, unique=True, validators=[django.core.validators.MaxLengthValidator(22), django.core.validators.MinLengthValidator(22)], verbose_name='Spotify ID')),
                ('spotify_uri', models.CharField(max_length=50, unique=True, verbose_name='Spotify URI')),
            ],
        ),
        migrations.CreateModel(
            name='CopyrightAlbumType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Copyright type name')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Genre name')),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True, validators=[django.core.validators.MaxLengthValidator(2), django.core.validators.MinLengthValidator(2)], verbose_name='Code Market')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Track name')),
                ('track_number_of_album', models.PositiveSmallIntegerField(verbose_name='Track number of album')),
                ('duration_ms', models.PositiveIntegerField(verbose_name='Track duration (ms)')),
                ('spotify_id', models.CharField(db_index=True, max_length=22, unique=True, validators=[django.core.validators.MaxLengthValidator(22), django.core.validators.MinLengthValidator(22)], verbose_name='Spotify ID')),
                ('spotify_uri', models.CharField(max_length=50, unique=True, verbose_name='Spotify URI')),
                ('explicit', models.BooleanField(verbose_name='Explicit')),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='music_app.album')),
                ('artists', models.ManyToManyField(related_name='tracks', to='music_app.artist')),
                ('available_markets', models.ManyToManyField(related_name='tracks', to='music_app.market')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='External ID name')),
                ('value', models.CharField(max_length=30, verbose_name='External ID value')),
                ('object_id', models.PositiveIntegerField(db_index=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='CopyrightAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100, unique=True, verbose_name='Copyright text')),
                ('copyright_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_app.copyrightalbumtype')),
            ],
        ),
        migrations.AddField(
            model_name='artist',
            name='genres',
            field=models.ManyToManyField(related_name='artists', to='music_app.genre'),
        ),
        migrations.AddField(
            model_name='album',
            name='album_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music_app.albumtype'),
        ),
        migrations.AddField(
            model_name='album',
            name='artists',
            field=models.ManyToManyField(related_name='albums', to='music_app.artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='available_markets',
            field=models.ManyToManyField(related_name='albums', to='music_app.market'),
        ),
        migrations.AddField(
            model_name='album',
            name='copyrights',
            field=models.ManyToManyField(related_name='albums', to='music_app.copyrightalbum'),
        ),
        migrations.AddField(
            model_name='album',
            name='genres',
            field=models.ManyToManyField(related_name='albums', to='music_app.genre'),
        ),
    ]
